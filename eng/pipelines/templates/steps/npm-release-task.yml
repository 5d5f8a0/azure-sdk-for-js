parameters:
  Registry: ''

steps:
  - template: /eng/common/pipelines/templates/steps/set-default-branch.yml
  - ${{if eq(parameters.Registry, 'https://registry.npmjs.org/')}}:
      - task: PowerShell@2
        displayName: Get package list
        inputs:
          targetType: filePath
          filePath: eng/tools/publish-to-npm.ps1
          arguments: -pathToArtifacts $(Package.Archive) -accessLevel "public" -tag "$(Tag)" -additionalTag "$(AdditionalTag)" -registry ${{parameters.Registry}} -npmToken $(azure-sdk-npm-token)
          pwsh: true
        condition: succeeded()
      - ${{ each package in split(variables.NpmPublishList, ',') }}:
          - task: EsrpRelease@6
            displayName: 'Publish ${{package}} to ESRP'
            ConnectedServiceName: 'ESRP Release Service'
            Intent: 'PackageDistribution'
            ContentType: 'npm'
            FolderLocation: ${{package}}
            Owners: $(Build.RequestedForEmail)
            Approvers: 'wesh@microsoft.com'
            ServiceEndpointUrl: 'https://api.esrp.microsoft.com'
            MainPublisher: 'ESRPRELPACMANTEST'
            DomainTenantId: '72f988bf-86f1-41af-91ab-2d7cd011db47'
            ProductState: $(Tag)
          - pwsh: >
              $regAuth=$registry.replace("https:","")
              $filterPackageList= $filterArg -split "," | % { return $_.trim() }
              $packageList = @()
              foreach ($p in $(dir $pathToArtifacts -r -i *.tgz)) {
                  foreach($filterItem in $filterPackageList) {
                      if($p.BaseName.contains($filterItem)) {
                          $packageList += extractPackage $p
                      }
                  }
              }
              foreach ($p in $packageList) {
                  if($p.Publish) {
                    $(Build.SourcesDirectory)/eng/scripts/npm-admin-tasks.ps1 -taskType AddTag -packageName $p.Project.name -pkgVersion $p.Project.version -tagName "$(AdditionalTag)" -npmToken "$(azure-sdk-npm-token)"
                  }
              }

  -${{ else }}:
      - task: PowerShell@2
        displayName: Publish to dev feed
        inputs:
          targetType: filePath
          filePath: eng/tools/publish-to-npm.ps1
          arguments: -pathToArtifacts $(Package.Archive) -accessLevel "public" -tag "$(Tag)" -additionalTag "$(AdditionalTag)" -registry ${{parameters.Registry}} -npmToken $(azure-sdk-npm-token)
          pwsh: true
        condition: succeeded()
